StartAt: LoadConfig
States:
  LoadConfig:
    Type: Task
    Resource: arn:aws:lambda:${region}:${account}:function:LoadConfig-${env}
    TimeoutSeconds: 60
    Retry:
      - ErrorEquals:
          - States.Timeout
          - States.Runtime
        IntervalSeconds: 5
        MaxAttempts: 3
        BackoffRate: 2.0
    Catch:
      - ErrorEquals:
          - States.ALL
        Next: NotifySlack
    Next: ProcessSchemas

  ProcessSchemas:
    Type: Map
    InputPath: $
    ItemsPath: $.schemas
    Parameters:
        "schema.$": "$$.Map.Item.Value.schema"
        "tables.$": "$$.Map.Item.Value.tables"
        "dt_date.$": "$.dt_date"
    Iterator:
      StartAt: ProcessSchema
      States:
        ProcessSchema:
          Type: Task
          Resource: arn:aws:lambda:${region}:${account}:function:ProcessSchema-${env}
          TimeoutSeconds: 60
          Retry:
            - ErrorEquals:
                - States.Timeout
                - States.Runtime
              IntervalSeconds: 5
              MaxAttempts: 3
              BackoffRate: 2.0
          Next: ProcessTables

        ProcessTables:
          Type: Map
          InputPath: $
          ItemsPath: $.tables
          Parameters:
            "target_tables.$": "$$.Map.Item.Value"
            "schema.$": "$.schema"
            "dt_date.$": "$.dt_date"
            "chunk_num.$": "$$.Map.Item.Index"
          Iterator:
            StartAt: ProcessSingleTable
            States:
              ProcessSingleTable:
                Type: Task
                Resource: arn:aws:lambda:${region}:${account}:function:ProcessTables-${env}
                TimeoutSeconds: 60
                Retry:
                  - ErrorEquals:
                      - States.Timeout
                      - States.Runtime
                    IntervalSeconds: 5
                    MaxAttempts: 3
                    BackoffRate: 2.0
                End: true
          End: true
    Catch:
      - ErrorEquals:
          - States.ALL
        Next: NotifySlack
    Next: AggrResults

  AggrResults:
    Type: Task
    Resource: arn:aws:lambda:${region}:${account}:function:AggrResults-${env}
    TimeoutSeconds: 60
    Retry:
      - ErrorEquals:
          - States.Timeout
          - States.Runtime
        IntervalSeconds: 5
        MaxAttempts: 3
        BackoffRate: 2.0
    Catch:
      - ErrorEquals:
          - States.ALL
        Next: NotifySlack
    Next: NotifySlack

  NotifySlack:
    Type: Task
    Resource: arn:aws:lambda:${region}:${account}:function:NotifySlack-${env}
    TimeoutSeconds: 60
    End: true
